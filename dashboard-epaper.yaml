esphome:
  name: dashboard-epaper
  friendly_name: E-Paper Dashboard
  includes:
    - includes/translate.h
    - includes/mdi_icon.h
    - includes/wordclock.h
    - includes/datetime.h
  on_boot:
    then:
      - switch.turn_on: display_power
      - component.update: screen
      - wait_until:
          condition:
            lambda: 'return id(data_updated) == true;'
            # Wait a bit longer so all the items are received
      - delay: 5s
      - logger.log: "Initial sensor data received: Refreshing display..."
      - lambda: 'id(initial_data_received) = true;'
      - script.execute: update_screen

  on_shutdown:
    then:
      - switch.turn_off: display_power

esp32:
  board: esp32dev
  framework:
    type: arduino

logger:

api:
  encryption:
    key: !secret api_key

ota:
  password: !secret ota_password
  platform: esphome

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: !secret fallback_ssid
    password: !secret fallback_password

captive_portal:

time:
  - platform: homeassistant
    id: homeassistant_time
    on_time:
      - seconds: 0
        minutes: /5
        then:
          - script.execute: update_screen

sensor:
  - platform: wifi_signal # Reports the WiFi signal strength/RSSI in dB
    name: "WiFi Signal dB"
    id: wifi_signal_db
    update_interval: 60s
    entity_category: "diagnostic"
    filters:
    - sliding_window_moving_average:
        window_size: 15
        send_every: 15

  - platform: copy # Reports the WiFi signal strength in %
    source_id: wifi_signal_db
    name: "WiFi Signal Percent"
    filters:
      - lambda: return min(max(2 * (x + 100.0), 0.0), 100.0);
    unit_of_measurement: "Signal %"
    entity_category: "diagnostic"
    device_class: ""

  - platform: template
    name: "Display Last Update"
    device_class: timestamp
    entity_category: "diagnostic"
    id: display_last_update

  - platform: homeassistant
    id: gesamtersparnis
    entity_id: sensor.again_watt_gspart
    on_value:
      then:
        - lambda: 'id(data_updated) = true;'

  - platform: homeassistant
    id: power_comsumption
    entity_id: sensor.energy_consumption_sum
    on_value:
      then:
        - lambda: 'id(data_updated) = true;'

  - platform: homeassistant
    id: solar_power
    entity_id: sensor.hoymiles_hm1500_p_dc
    on_value:
      then:
        - lambda: 'id(data_updated) = true;'

  - platform: homeassistant
    id: pooltemperature
    entity_id: sensor.pool_temperature
    on_value:
      then:
        - lambda: 'id(data_updated) = true;'

  - platform: homeassistant
    id: temp_now
    entity_id: sensor.tempcurrent
    on_value:
      then:
        - lambda: 'id(data_updated) = true;'

  - platform: homeassistant
    id: temp_h1
    entity_id: sensor.temperature_forecast_h1
  
  - platform: homeassistant
    id: temp_h2
    entity_id: sensor.temperature_forecast_h2
  
  - platform: homeassistant
    id: temp_h3
    entity_id: sensor.temperature_forecast_h3

  - platform: homeassistant
    id: temp_d1
    entity_id: sensor.temperature_forecast_d1
  
  - platform: homeassistant
    id: temp_d2
    entity_id: sensor.temperature_forecast_d2
  
  - platform: homeassistant
    id: temp_d3
    entity_id: sensor.temperature_forecast_d3

text_sensor:
  - platform: homeassistant
    id: pooltemperature_gain
    entity_id: sensor.pool_temperature_gain_since_yesterday_text
    on_value:
      then:
        - lambda: 'id(data_updated) = true;'

  - platform: homeassistant
    id: weather_now
    entity_id: sensor.weathercurrent
  
  - platform: homeassistant
    id: weather_h1
    entity_id: sensor.weather_forecast_h1
  
  - platform: homeassistant
    id: weather_h2
    entity_id: sensor.weather_forecast_h2
  
  - platform: homeassistant
    id: weather_h3
    entity_id: sensor.weather_forecast_h3
  
  - platform: homeassistant
    id: weather_d1
    entity_id: sensor.weather_forecast_d1
  
  - platform: homeassistant
    id: weather_d2
    entity_id: sensor.weather_forecast_d2
  
  - platform: homeassistant
    id: weather_d3
    entity_id: sensor.weather_forecast_d3

graph:
    - id: energy_graph
      duration: 6h
      width: 240
      height: 80
      border: True
      traces:
        - sensor: power_comsumption
          line_thickness: 1
          continuous: True
        - sensor: solar_power
          line_thickness: 1
          line_type: DASHED
          continuous: True

switch:
  - platform: gpio
    pin: GPIO3 #display power enable pin
    id: display_power
    internal: true

button:
  - platform: restart
    name: "Dashboard - Restart"
  - platform: template
    name: "Dashboard - Refresh Screen"
    entity_category: config
    on_press:
      - script.execute: update_screen

globals:
  - id: data_updated
    type: bool
    restore_value: no
    initial_value: 'false'
  - id: initial_data_received
    type: bool
    restore_value: no
    initial_value: 'false'
  - id: recorded_display_refresh
    type: int
    restore_value: yes
    initial_value: '0'

font:
  - file: "gfonts://Inter@900"
    id: big
    size: 120
    glyphs: &umlaut-glyphs
      ['&', '@', '!', ',', '.', '?', '"', '%', '(', ')', '+', '-', '_', ':', '°', '0',
      '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E',
      'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S',
      'T', 'U', 'V', 'W', 'X', 'Y', 'Z', ' ', 'a', 'b', 'c', 'd', 'e', 'f',
      'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't',
      'u', 'v', 'w', 'x', 'y', 'z','å', 'Ä', 'ä', 'Ö', 'ö', 'Ü', 'ü', '/', '€', '↗', '↘']
  - file: "gfonts://Inter@900"
    id: medium
    size: 60
    glyphs: *umlaut-glyphs

  - file: "gfonts://Inter@700"
    id: small
    size: 30
    glyphs: *umlaut-glyphs

  - file: "gfonts://Inter@700"
    id: tiny
    size: 24
    glyphs: *umlaut-glyphs

  - file: 'fonts/materialdesignicons-webfont.ttf'
    id: font_mdi_large
    size: 200
    glyphs: &mdi-glyphs
      - "\U000F0590" # mdi-weather-cloudy
      - "\U000F0F2F" # mdi-weather-cloudy-alert
      - "\U000F0E6E" # mdi-weather-cloudy-arrow-right
      - "\U000F0591" # mdi-weather-fog
      - "\U000F0592" # mdi-weather-hail
      - "\U000F0F30" # mdi-weather-hazy
      - "\U000F0898" # mdi-weather-hurricane
      - "\U000F0593" # mdi-weather-lightning
      - "\U000F067E" # mdi-weather-lightning-rainy
      - "\U000F0594" # mdi-weather-clear-night
      - "\U000F0F31" # mdi-weather-night-partly-cloudy
      - "\U000F0595" # mdi-weather-partly-cloudy
      - "\U000F0F32" # mdi-weather-partly-lightning
      - "\U000F0F33" # mdi-weather-partly-rainy
      - "\U000F0F34" # mdi-weather-partly-snowy
      - "\U000F0F35" # mdi-weather-partly-snowy-rainy
      - "\U000F0596" # mdi-weather-pouring
      - "\U000F0597" # mdi-weather-rainy
      - "\U000F0598" # mdi-weather-snowy
      - "\U000F0F36" # mdi-weather-snowy-heavy
      - "\U000F067F" # mdi-weather-snowy-rainy
      - "\U000F0599" # mdi-weather-sunny
      - "\U000F0F37" # mdi-weather-sunny-alert
      - "\U000F14E4" # mdi-weather-sunny-off
      - "\U000F059A" # mdi-weather-sunset
      - "\U000F059B" # mdi-weather-sunset-down
      - "\U000F059C" # mdi-weather-sunset-up
      - "\U000F0F38" # mdi-weather-tornado
      - "\U000F059D" # mdi-weather-windy
      - "\U000F059E" # mdi-weather-windy-variant
      - "\U000F1903" # mdi-home-lightning-bolt
      - "\U000F1A73" # mdi-solar-power-variant
      - "\U000F0116" # mdi-cash-multiple
      - "\U000F1A5F" # mdi-pool-temperature
  - file: 'fonts/materialdesignicons-webfont.ttf'
    id: font_mdi_medium
    size: 40
    glyphs: *mdi-glyphs

script:
  - id: update_screen
    then:
      - lambda: 'id(data_updated) = false;'
      - component.update: screen
      - lambda: 'id(recorded_display_refresh) += 1;'
      - lambda: 'id(display_last_update).publish_state(id(homeassistant_time).now().timestamp);'

binary_sensor:
  - platform: status
    name: "Status"
  - platform: homeassistant
    name: "OTA Mode"
    id: otamode
    entity_id: input_boolean.display_ota_mode

spi:
  clk_pin: GPIO13
  mosi_pin: GPIO14

display:
  - platform: waveshare_epaper
    model: 7.50inV2alt
    cs_pin: GPIO15
    dc_pin: GPIO27
    busy_pin:
      number: GPIO25
      inverted: true
    reset_pin: GPIO26
    id: screen
    update_interval: 3600s
    lambda: !include includes/display_lambda.cpp